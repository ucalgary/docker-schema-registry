stages:
  - build
  - release

variables:
  SCHEMA_REGISTRY_VERSION: '3.1.1'
  SCHEMA_REGISTRY_VERSION_MAJOR: '3'
  SCHEMA_REGISTRY_VERSION_MINOR: '1'
  SCHEMA_REGISTRY_VERSION_PATCH: '1'

before_script:
  - if [ -n "${CI_BUILD_TOKEN}" ]; then docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY; fi

Build Image:
  stage: build
  script:
    - if [ -z ${CI_REGISTRY_IMAGE+x} ]; then export CI_REGISTRY_IMAGE=`basename $CI_BUILD_REPO`; fi
    - docker build --pull -t $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME $SCHEMA_REGISTRY_VERSION_MAJOR.$SCHEMA_REGISTRY_VERSION_MINOR
    - if [ -n "${CI_BUILD_TOKEN}" ]; then docker push $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME; fi

Relase Image:
  stage: release
  variables:
    GIT_STRATEGY: none
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
    - docker tag $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE:$SCHEMA_REGISTRY_VERSION_MAJOR.$SCHEMA_REGISTRY_VERSION_MINOR.$SCHEMA_REGISTRY_VERSION_PATCH
    - docker tag $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE:$SCHEMA_REGISTRY_VERSION_MAJOR.$SCHEMA_REGISTRY_VERSION_MINOR
    - docker tag $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE:$SCHEMA_REGISTRY_VERSION_MAJOR
    - docker tag $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$SCHEMA_REGISTRY_VERSION_MAJOR.$SCHEMA_REGISTRY_VERSION_MINOR.$SCHEMA_REGISTRY_VERSION_PATCH
    - docker push $CI_REGISTRY_IMAGE:$SCHEMA_REGISTRY_VERSION_MAJOR.$SCHEMA_REGISTRY_VERSION_MINOR
    - docker push $CI_REGISTRY_IMAGE:$SCHEMA_REGISTRY_VERSION_MAJOR
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - tags
    - triggers
